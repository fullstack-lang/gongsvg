basePath: /api/github.com/fullstack-lang/gongsvg/go/v1
consumes:
- application/json
definitions:
  Animate:
    properties:
      AttributeName:
        type: string
      Dur:
        type: string
      Name:
        type: string
      RepeatCount:
        type: string
      Values:
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gongsvg/go/models
  Circle:
    properties:
      Animations:
        items:
          $ref: '#/definitions/Animate'
        type: array
      CX:
        format: double
        type: number
        x-go-name: Radius
      Color:
        type: string
      FillOpacity:
        format: double
        type: number
      Name:
        type: string
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gongsvg/go/models
  DeletedAt:
    $ref: '#/definitions/NullTime'
  Ellipse:
    properties:
      Animates:
        items:
          $ref: '#/definitions/Animate'
        type: array
      CX:
        format: double
        type: number
        x-go-name: RY
      Color:
        type: string
      FillOpacity:
        format: double
        type: number
      Name:
        type: string
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gongsvg/go/models
  Line:
    properties:
      Animates:
        items:
          $ref: '#/definitions/Animate'
        type: array
      Color:
        type: string
      FillOpacity:
        format: double
        type: number
      Name:
        type: string
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
      X1:
        format: double
        type: number
        x-go-name: Y2
    type: object
    x-go-package: github.com/fullstack-lang/gongsvg/go/models
  NullBool:
    description: |-
      NullBool implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Bool:
        type: boolean
      Valid:
        type: boolean
    title: NullBool represents a bool that may be null.
    type: object
    x-go-package: database/sql
  NullFloat64:
    description: |-
      NullFloat64 implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Float64:
        format: double
        type: number
      Valid:
        type: boolean
    title: NullFloat64 represents a float64 that may be null.
    type: object
    x-go-package: database/sql
  NullInt64:
    description: |-
      NullInt64 implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Int64:
        format: int64
        type: integer
      Valid:
        type: boolean
    title: NullInt64 represents an int64 that may be null.
    type: object
    x-go-package: database/sql
  NullString:
    description: |-
      var s NullString
      err := db.QueryRow("SELECT name FROM foo WHERE id=?", id).Scan(&s)
      ...
      if s.Valid {
      use s.String
      } else {
      NULL value
      }
    properties:
      String:
        type: string
      Valid:
        type: boolean
    title: |-
      NullString represents a string that may be null.
      NullString implements the Scanner interface so
      it can be used as a scan destination:
    type: object
    x-go-package: database/sql
  NullTime:
    description: |-
      NullTime implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Time:
        format: date-time
        type: string
      Valid:
        type: boolean
    title: NullTime represents a time.Time that may be null.
    type: object
    x-go-package: database/sql
  Path:
    properties:
      Animates:
        items:
          $ref: '#/definitions/Animate'
        type: array
      Color:
        type: string
      Definition:
        description: |-
          Definition


          d="M 10,30
          A 20,20 0,0,1 50,30
          A 20,20 0,0,1 90,30
          Q 90,60 50,90
          Q 10,60 10,30 z" />

          MoveTo: M, m
          LineTo: L, l, H, h, V, v
          Cubic Bézier Curve: C, c, S, s
          Quadratic Bézier Curve: Q, q, T, t
          Elliptical Arc Curve: A, a
          ClosePath: Z, z
        type: string
      FillOpacity:
        format: double
        type: number
      Name:
        type: string
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gongsvg/go/models
  Polygone:
    properties:
      Animates:
        items:
          $ref: '#/definitions/Animate'
        type: array
      Color:
        type: string
      FillOpacity:
        format: double
        type: number
      Name:
        type: string
      Points:
        type: string
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gongsvg/go/models
  Polyline:
    properties:
      Animates:
        items:
          $ref: '#/definitions/Animate'
        type: array
      Color:
        type: string
      FillOpacity:
        format: double
        type: number
      Name:
        type: string
      Points:
        type: string
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gongsvg/go/models
  Rect:
    properties:
      Animations:
        items:
          $ref: '#/definitions/Animate'
        type: array
      Color:
        type: string
      FillOpacity:
        format: double
        type: number
      Name:
        type: string
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
      X:
        format: double
        type: number
        x-go-name: RX
    type: object
    x-go-package: github.com/fullstack-lang/gongsvg/go/models
  Text:
    properties:
      Animates:
        items:
          $ref: '#/definitions/Animate'
        type: array
      Color:
        type: string
      Content:
        type: string
      FillOpacity:
        format: double
        type: number
      Name:
        type: string
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
      X:
        format: double
        type: number
        x-go-name: "Y"
    type: object
    x-go-package: github.com/fullstack-lang/gongsvg/go/models
  animateAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      AttributeName:
        type: string
      Circle_AnimationsDBID:
        $ref: '#/definitions/NullInt64'
      Circle_AnimationsDBID_Index:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Dur:
        type: string
      Ellipse_AnimatesDBID:
        $ref: '#/definitions/NullInt64'
      Ellipse_AnimatesDBID_Index:
        $ref: '#/definitions/NullInt64'
      ID:
        format: uint64
        type: integer
      Line_AnimatesDBID:
        $ref: '#/definitions/NullInt64'
      Line_AnimatesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Name:
        type: string
      Path_AnimatesDBID:
        $ref: '#/definitions/NullInt64'
      Path_AnimatesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Polygone_AnimatesDBID:
        $ref: '#/definitions/NullInt64'
      Polygone_AnimatesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Polyline_AnimatesDBID:
        $ref: '#/definitions/NullInt64'
      Polyline_AnimatesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Rect_AnimationsDBID:
        $ref: '#/definitions/NullInt64'
      Rect_AnimationsDBID_Index:
        $ref: '#/definitions/NullInt64'
      RepeatCount:
        type: string
      Text_AnimatesDBID:
        $ref: '#/definitions/NullInt64'
      Text_AnimatesDBID_Index:
        $ref: '#/definitions/NullInt64'
      UpdatedAt:
        format: date-time
        type: string
      Values:
        type: string
    title: AnimateAPI is the input in POST API
    type: object
    x-go-name: AnimateAPI
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  animateDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      AttributeName_Data:
        $ref: '#/definitions/NullString'
      Circle_AnimationsDBID:
        $ref: '#/definitions/NullInt64'
      Circle_AnimationsDBID_Index:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Dur_Data:
        $ref: '#/definitions/NullString'
      Ellipse_AnimatesDBID:
        $ref: '#/definitions/NullInt64'
      Ellipse_AnimatesDBID_Index:
        $ref: '#/definitions/NullInt64'
      ID:
        format: uint64
        type: integer
      Line_AnimatesDBID:
        $ref: '#/definitions/NullInt64'
      Line_AnimatesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Name_Data:
        $ref: '#/definitions/NullString'
      Path_AnimatesDBID:
        $ref: '#/definitions/NullInt64'
      Path_AnimatesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Polygone_AnimatesDBID:
        $ref: '#/definitions/NullInt64'
      Polygone_AnimatesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Polyline_AnimatesDBID:
        $ref: '#/definitions/NullInt64'
      Polyline_AnimatesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Rect_AnimationsDBID:
        $ref: '#/definitions/NullInt64'
      Rect_AnimationsDBID_Index:
        $ref: '#/definitions/NullInt64'
      RepeatCount_Data:
        $ref: '#/definitions/NullString'
      Text_AnimatesDBID:
        $ref: '#/definitions/NullInt64'
      Text_AnimatesDBID_Index:
        $ref: '#/definitions/NullInt64'
      UpdatedAt:
        format: date-time
        type: string
      Values_Data:
        $ref: '#/definitions/NullString'
    title: AnimateDB describes a animate in the database
    type: object
    x-go-name: AnimateDB
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  circleAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Animations:
        items:
          $ref: '#/definitions/Animate'
        type: array
      CX:
        format: double
        type: number
        x-go-name: Radius
      Color:
        type: string
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      SVG_CirclesDBID:
        $ref: '#/definitions/NullInt64'
      SVG_CirclesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: CircleAPI is the input in POST API
    type: object
    x-go-name: CircleAPI
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  circleDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      CX_Data:
        $ref: '#/definitions/NullFloat64'
      CY_Data:
        $ref: '#/definitions/NullFloat64'
      Color_Data:
        $ref: '#/definitions/NullString'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      Radius_Data:
        $ref: '#/definitions/NullFloat64'
      SVG_CirclesDBID:
        $ref: '#/definitions/NullInt64'
      SVG_CirclesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke_Data:
        $ref: '#/definitions/NullString'
      StrokeDashArray_Data:
        $ref: '#/definitions/NullString'
      StrokeWidth_Data:
        $ref: '#/definitions/NullFloat64'
      Transform_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: CircleDB describes a circle in the database
    type: object
    x-go-name: CircleDB
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  ellipseAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Animates:
        items:
          $ref: '#/definitions/Animate'
        type: array
      CX:
        format: double
        type: number
        x-go-name: RY
      Color:
        type: string
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      SVG_EllipsesDBID:
        $ref: '#/definitions/NullInt64'
      SVG_EllipsesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: EllipseAPI is the input in POST API
    type: object
    x-go-name: EllipseAPI
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  ellipseDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      CX_Data:
        $ref: '#/definitions/NullFloat64'
      CY_Data:
        $ref: '#/definitions/NullFloat64'
      Color_Data:
        $ref: '#/definitions/NullString'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      RX_Data:
        $ref: '#/definitions/NullFloat64'
      RY_Data:
        $ref: '#/definitions/NullFloat64'
      SVG_EllipsesDBID:
        $ref: '#/definitions/NullInt64'
      SVG_EllipsesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke_Data:
        $ref: '#/definitions/NullString'
      StrokeDashArray_Data:
        $ref: '#/definitions/NullString'
      StrokeWidth_Data:
        $ref: '#/definitions/NullFloat64'
      Transform_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: EllipseDB describes a ellipse in the database
    type: object
    x-go-name: EllipseDB
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  lineAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Animates:
        items:
          $ref: '#/definitions/Animate'
        type: array
      Color:
        type: string
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      SVG_LinesDBID:
        $ref: '#/definitions/NullInt64'
      SVG_LinesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
      UpdatedAt:
        format: date-time
        type: string
      X1:
        format: double
        type: number
        x-go-name: Y2
    title: LineAPI is the input in POST API
    type: object
    x-go-name: LineAPI
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  lineDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Color_Data:
        $ref: '#/definitions/NullString'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      SVG_LinesDBID:
        $ref: '#/definitions/NullInt64'
      SVG_LinesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke_Data:
        $ref: '#/definitions/NullString'
      StrokeDashArray_Data:
        $ref: '#/definitions/NullString'
      StrokeWidth_Data:
        $ref: '#/definitions/NullFloat64'
      Transform_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
      X1_Data:
        $ref: '#/definitions/NullFloat64'
      X2_Data:
        $ref: '#/definitions/NullFloat64'
      Y1_Data:
        $ref: '#/definitions/NullFloat64'
      Y2_Data:
        $ref: '#/definitions/NullFloat64'
    title: LineDB describes a line in the database
    type: object
    x-go-name: LineDB
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  pathAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Animates:
        items:
          $ref: '#/definitions/Animate'
        type: array
      Color:
        type: string
      CreatedAt:
        format: date-time
        type: string
      Definition:
        description: |-
          Definition


          d="M 10,30
          A 20,20 0,0,1 50,30
          A 20,20 0,0,1 90,30
          Q 90,60 50,90
          Q 10,60 10,30 z" />

          MoveTo: M, m
          LineTo: L, l, H, h, V, v
          Cubic Bézier Curve: C, c, S, s
          Quadratic Bézier Curve: Q, q, T, t
          Elliptical Arc Curve: A, a
          ClosePath: Z, z
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      SVG_PathsDBID:
        $ref: '#/definitions/NullInt64'
      SVG_PathsDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: PathAPI is the input in POST API
    type: object
    x-go-name: PathAPI
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  pathDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Color_Data:
        $ref: '#/definitions/NullString'
      CreatedAt:
        format: date-time
        type: string
      Definition_Data:
        $ref: '#/definitions/NullString'
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      SVG_PathsDBID:
        $ref: '#/definitions/NullInt64'
      SVG_PathsDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke_Data:
        $ref: '#/definitions/NullString'
      StrokeDashArray_Data:
        $ref: '#/definitions/NullString'
      StrokeWidth_Data:
        $ref: '#/definitions/NullFloat64'
      Transform_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: PathDB describes a path in the database
    type: object
    x-go-name: PathDB
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  polygoneAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Animates:
        items:
          $ref: '#/definitions/Animate'
        type: array
      Color:
        type: string
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      Points:
        type: string
      SVG_PolygonesDBID:
        $ref: '#/definitions/NullInt64'
      SVG_PolygonesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: PolygoneAPI is the input in POST API
    type: object
    x-go-name: PolygoneAPI
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  polygoneDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Color_Data:
        $ref: '#/definitions/NullString'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      Points_Data:
        $ref: '#/definitions/NullString'
      SVG_PolygonesDBID:
        $ref: '#/definitions/NullInt64'
      SVG_PolygonesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke_Data:
        $ref: '#/definitions/NullString'
      StrokeDashArray_Data:
        $ref: '#/definitions/NullString'
      StrokeWidth_Data:
        $ref: '#/definitions/NullFloat64'
      Transform_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: PolygoneDB describes a polygone in the database
    type: object
    x-go-name: PolygoneDB
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  polylineAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Animates:
        items:
          $ref: '#/definitions/Animate'
        type: array
      Color:
        type: string
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      Points:
        type: string
      SVG_PolylinesDBID:
        $ref: '#/definitions/NullInt64'
      SVG_PolylinesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: PolylineAPI is the input in POST API
    type: object
    x-go-name: PolylineAPI
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  polylineDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Color_Data:
        $ref: '#/definitions/NullString'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      Points_Data:
        $ref: '#/definitions/NullString'
      SVG_PolylinesDBID:
        $ref: '#/definitions/NullInt64'
      SVG_PolylinesDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke_Data:
        $ref: '#/definitions/NullString'
      StrokeDashArray_Data:
        $ref: '#/definitions/NullString'
      StrokeWidth_Data:
        $ref: '#/definitions/NullFloat64'
      Transform_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: PolylineDB describes a polyline in the database
    type: object
    x-go-name: PolylineDB
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  rectAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Animations:
        items:
          $ref: '#/definitions/Animate'
        type: array
      Color:
        type: string
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      SVG_RectsDBID:
        $ref: '#/definitions/NullInt64'
      SVG_RectsDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
      UpdatedAt:
        format: date-time
        type: string
      X:
        format: double
        type: number
        x-go-name: RX
    title: RectAPI is the input in POST API
    type: object
    x-go-name: RectAPI
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  rectDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Color_Data:
        $ref: '#/definitions/NullString'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity_Data:
        $ref: '#/definitions/NullFloat64'
      Height_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      RX_Data:
        $ref: '#/definitions/NullFloat64'
      SVG_RectsDBID:
        $ref: '#/definitions/NullInt64'
      SVG_RectsDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke_Data:
        $ref: '#/definitions/NullString'
      StrokeDashArray_Data:
        $ref: '#/definitions/NullString'
      StrokeWidth_Data:
        $ref: '#/definitions/NullFloat64'
      Transform_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
      Width_Data:
        $ref: '#/definitions/NullFloat64'
      X_Data:
        $ref: '#/definitions/NullFloat64'
      Y_Data:
        $ref: '#/definitions/NullFloat64'
    title: RectDB describes a rect in the database
    type: object
    x-go-name: RectDB
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  svgAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Circles:
        items:
          $ref: '#/definitions/Circle'
        type: array
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Display:
        type: boolean
      Ellipses:
        items:
          $ref: '#/definitions/Ellipse'
        type: array
      ID:
        format: uint64
        type: integer
      Lines:
        items:
          $ref: '#/definitions/Line'
        type: array
      Name:
        type: string
      Paths:
        items:
          $ref: '#/definitions/Path'
        type: array
      Polygones:
        items:
          $ref: '#/definitions/Polygone'
        type: array
      Polylines:
        items:
          $ref: '#/definitions/Polyline'
        type: array
      Rects:
        items:
          $ref: '#/definitions/Rect'
        type: array
      Texts:
        items:
          $ref: '#/definitions/Text'
        type: array
      UpdatedAt:
        format: date-time
        type: string
    title: SVGAPI is the input in POST API
    type: object
    x-go-name: SVGAPI
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  svgDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Display_Data:
        $ref: '#/definitions/NullBool'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: SVGDB describes a svg in the database
    type: object
    x-go-name: SVGDB
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  textAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Animates:
        items:
          $ref: '#/definitions/Animate'
        type: array
      Color:
        type: string
      Content:
        type: string
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      SVG_TextsDBID:
        $ref: '#/definitions/NullInt64'
      SVG_TextsDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke:
        type: string
      StrokeDashArray:
        type: string
      StrokeWidth:
        format: double
        type: number
      Transform:
        description: |-
          Transform is a string componding SVG transform

          for instance : rotate(-10 50 100)
          translate(-36 45.5)
          skewX(40)
          scale(1 0.5)
        type: string
      UpdatedAt:
        format: date-time
        type: string
      X:
        format: double
        type: number
        x-go-name: "Y"
    title: TextAPI is the input in POST API
    type: object
    x-go-name: TextAPI
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
  textDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Color_Data:
        $ref: '#/definitions/NullString'
      Content_Data:
        $ref: '#/definitions/NullString'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      FillOpacity_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      SVG_TextsDBID:
        $ref: '#/definitions/NullInt64'
      SVG_TextsDBID_Index:
        $ref: '#/definitions/NullInt64'
      Stroke_Data:
        $ref: '#/definitions/NullString'
      StrokeDashArray_Data:
        $ref: '#/definitions/NullString'
      StrokeWidth_Data:
        $ref: '#/definitions/NullFloat64'
      Transform_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
      X_Data:
        $ref: '#/definitions/NullFloat64'
      Y_Data:
        $ref: '#/definitions/NullFloat64'
    title: TextDB describes a text in the database
    type: object
    x-go-name: TextDB
    x-go-package: github.com/fullstack-lang/gongsvg/go/orm
host: localhost:8080
info:
  description: gongsvg exposes types of a package.
  title: gongsvg backend API
  version: "0.1"
paths:
  /animates:
    get:
      description: Get all animates
      operationId: getAnimates
      responses:
        "200":
          $ref: '#/responses/animateDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - animates
    post:
      consumes:
      - application/json
      description: Creates a animate
      operationId: postAnimate
      parameters:
      - description: The Animate to submit or modify
        in: body
        name: Animate
        schema:
          $ref: '#/definitions/animateAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/animateDBResponse'
      tags:
      - animates
  /animates/{ID}:
    delete:
      description: Delete a animate
      operationId: deleteAnimate
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - animates
    get:
      operationId: getAnimate
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/animateDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a animate.
      tags:
      - animates
    patch:
      description: Update a animate
      operationId: updateAnimate
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Animate to submit or modify
        in: body
        name: Animate
        schema:
          $ref: '#/definitions/animateAPI'
      responses:
        "200":
          $ref: '#/responses/animateDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - animates
  /circles:
    get:
      description: Get all circles
      operationId: getCircles
      responses:
        "200":
          $ref: '#/responses/circleDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - circles
    post:
      consumes:
      - application/json
      description: Creates a circle
      operationId: postCircle
      parameters:
      - description: The Circle to submit or modify
        in: body
        name: Circle
        schema:
          $ref: '#/definitions/circleAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/circleDBResponse'
      tags:
      - circles
  /circles/{ID}:
    delete:
      description: Delete a circle
      operationId: deleteCircle
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - circles
    get:
      operationId: getCircle
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/circleDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a circle.
      tags:
      - circles
    patch:
      description: Update a circle
      operationId: updateCircle
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Circle to submit or modify
        in: body
        name: Circle
        schema:
          $ref: '#/definitions/circleAPI'
      responses:
        "200":
          $ref: '#/responses/circleDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - circles
  /commitnb:
    get:
      operationId: GetLastCommitNb
      tags:
      - backrepo
  /ellipses:
    get:
      description: Get all ellipses
      operationId: getEllipses
      responses:
        "200":
          $ref: '#/responses/ellipseDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - ellipses
    post:
      consumes:
      - application/json
      description: Creates a ellipse
      operationId: postEllipse
      parameters:
      - description: The Ellipse to submit or modify
        in: body
        name: Ellipse
        schema:
          $ref: '#/definitions/ellipseAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/ellipseDBResponse'
      tags:
      - ellipses
  /ellipses/{ID}:
    delete:
      description: Delete a ellipse
      operationId: deleteEllipse
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - ellipses
    get:
      operationId: getEllipse
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/ellipseDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a ellipse.
      tags:
      - ellipses
    patch:
      description: Update a ellipse
      operationId: updateEllipse
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Ellipse to submit or modify
        in: body
        name: Ellipse
        schema:
          $ref: '#/definitions/ellipseAPI'
      responses:
        "200":
          $ref: '#/responses/ellipseDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - ellipses
  /lines:
    get:
      description: Get all lines
      operationId: getLines
      responses:
        "200":
          $ref: '#/responses/lineDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - lines
    post:
      consumes:
      - application/json
      description: Creates a line
      operationId: postLine
      parameters:
      - description: The Line to submit or modify
        in: body
        name: Line
        schema:
          $ref: '#/definitions/lineAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/lineDBResponse'
      tags:
      - lines
  /lines/{ID}:
    delete:
      description: Delete a line
      operationId: deleteLine
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - lines
    get:
      operationId: getLine
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/lineDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a line.
      tags:
      - lines
    patch:
      description: Update a line
      operationId: updateLine
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Line to submit or modify
        in: body
        name: Line
        schema:
          $ref: '#/definitions/lineAPI'
      responses:
        "200":
          $ref: '#/responses/lineDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - lines
  /paths:
    get:
      description: Get all paths
      operationId: getPaths
      responses:
        "200":
          $ref: '#/responses/pathDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - paths
    post:
      consumes:
      - application/json
      description: Creates a path
      operationId: postPath
      parameters:
      - description: The Path to submit or modify
        in: body
        name: Path
        schema:
          $ref: '#/definitions/pathAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/pathDBResponse'
      tags:
      - paths
  /paths/{ID}:
    delete:
      description: Delete a path
      operationId: deletePath
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - paths
    get:
      operationId: getPath
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/pathDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a path.
      tags:
      - paths
    patch:
      description: Update a path
      operationId: updatePath
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Path to submit or modify
        in: body
        name: Path
        schema:
          $ref: '#/definitions/pathAPI'
      responses:
        "200":
          $ref: '#/responses/pathDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - paths
  /polygones:
    get:
      description: Get all polygones
      operationId: getPolygones
      responses:
        "200":
          $ref: '#/responses/polygoneDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - polygones
    post:
      consumes:
      - application/json
      description: Creates a polygone
      operationId: postPolygone
      parameters:
      - description: The Polygone to submit or modify
        in: body
        name: Polygone
        schema:
          $ref: '#/definitions/polygoneAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/polygoneDBResponse'
      tags:
      - polygones
  /polygones/{ID}:
    delete:
      description: Delete a polygone
      operationId: deletePolygone
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - polygones
    get:
      operationId: getPolygone
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/polygoneDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a polygone.
      tags:
      - polygones
    patch:
      description: Update a polygone
      operationId: updatePolygone
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Polygone to submit or modify
        in: body
        name: Polygone
        schema:
          $ref: '#/definitions/polygoneAPI'
      responses:
        "200":
          $ref: '#/responses/polygoneDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - polygones
  /polylines:
    get:
      description: Get all polylines
      operationId: getPolylines
      responses:
        "200":
          $ref: '#/responses/polylineDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - polylines
    post:
      consumes:
      - application/json
      description: Creates a polyline
      operationId: postPolyline
      parameters:
      - description: The Polyline to submit or modify
        in: body
        name: Polyline
        schema:
          $ref: '#/definitions/polylineAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/polylineDBResponse'
      tags:
      - polylines
  /polylines/{ID}:
    delete:
      description: Delete a polyline
      operationId: deletePolyline
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - polylines
    get:
      operationId: getPolyline
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/polylineDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a polyline.
      tags:
      - polylines
    patch:
      description: Update a polyline
      operationId: updatePolyline
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Polyline to submit or modify
        in: body
        name: Polyline
        schema:
          $ref: '#/definitions/polylineAPI'
      responses:
        "200":
          $ref: '#/responses/polylineDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - polylines
  /pushfromfrontnb:
    get:
      operationId: GetLastPushFromFrontNb
      tags:
      - backrepo
  /rects:
    get:
      description: Get all rects
      operationId: getRects
      responses:
        "200":
          $ref: '#/responses/rectDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - rects
    post:
      consumes:
      - application/json
      description: Creates a rect
      operationId: postRect
      parameters:
      - description: The Rect to submit or modify
        in: body
        name: Rect
        schema:
          $ref: '#/definitions/rectAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/rectDBResponse'
      tags:
      - rects
  /rects/{ID}:
    delete:
      description: Delete a rect
      operationId: deleteRect
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - rects
    get:
      operationId: getRect
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/rectDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a rect.
      tags:
      - rects
    patch:
      description: Update a rect
      operationId: updateRect
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Rect to submit or modify
        in: body
        name: Rect
        schema:
          $ref: '#/definitions/rectAPI'
      responses:
        "200":
          $ref: '#/responses/rectDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - rects
  /svgs:
    get:
      description: Get all svgs
      operationId: getSVGs
      responses:
        "200":
          $ref: '#/responses/svgDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - svgs
    post:
      consumes:
      - application/json
      description: Creates a svg
      operationId: postSVG
      parameters:
      - description: The SVG to submit or modify
        in: body
        name: SVG
        schema:
          $ref: '#/definitions/svgAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/svgDBResponse'
      tags:
      - svgs
  /svgs/{ID}:
    delete:
      description: Delete a svg
      operationId: deleteSVG
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - svgs
    get:
      operationId: getSVG
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/svgDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a svg.
      tags:
      - svgs
    patch:
      description: Update a svg
      operationId: updateSVG
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The SVG to submit or modify
        in: body
        name: SVG
        schema:
          $ref: '#/definitions/svgAPI'
      responses:
        "200":
          $ref: '#/responses/svgDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - svgs
  /texts:
    get:
      description: Get all texts
      operationId: getTexts
      responses:
        "200":
          $ref: '#/responses/textDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - texts
    post:
      consumes:
      - application/json
      description: Creates a text
      operationId: postText
      parameters:
      - description: The Text to submit or modify
        in: body
        name: Text
        schema:
          $ref: '#/definitions/textAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/textDBResponse'
      tags:
      - texts
  /texts/{ID}:
    delete:
      description: Delete a text
      operationId: deleteText
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - texts
    get:
      operationId: getText
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/textDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a text.
      tags:
      - texts
    patch:
      description: Update a text
      operationId: updateText
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Text to submit or modify
        in: body
        name: Text
        schema:
          $ref: '#/definitions/textAPI'
      responses:
        "200":
          $ref: '#/responses/textDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - texts
produces:
- application/json
responses:
  animateDBResponse:
    description: AnimateDBResponse provides response
    headers:
      AttributeName_Data:
        description: Declation for basic field animateDB.AttributeName {{BasicKind}} (to be completed)
      Circle_AnimationsDBID:
        description: |-
          insertion for pointer fields encoding declaration
          Implementation of a reverse ID for field Circle{}.Animations []*Animate
      Circle_AnimationsDBID_Index:
        description: implementation of the index of the withing the slice
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      Dur_Data:
        description: Declation for basic field animateDB.Dur {{BasicKind}} (to be completed)
      Ellipse_AnimatesDBID:
        description: Implementation of a reverse ID for field Ellipse{}.Animates []*Animate
      Ellipse_AnimatesDBID_Index:
        description: implementation of the index of the withing the slice
      ID:
        format: uint64
        type: integer
      Line_AnimatesDBID:
        description: Implementation of a reverse ID for field Line{}.Animates []*Animate
      Line_AnimatesDBID_Index:
        description: implementation of the index of the withing the slice
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field animateDB.Name {{BasicKind}} (to be completed)
      Path_AnimatesDBID:
        description: Implementation of a reverse ID for field Path{}.Animates []*Animate
      Path_AnimatesDBID_Index:
        description: implementation of the index of the withing the slice
      Polygone_AnimatesDBID:
        description: Implementation of a reverse ID for field Polygone{}.Animates []*Animate
      Polygone_AnimatesDBID_Index:
        description: implementation of the index of the withing the slice
      Polyline_AnimatesDBID:
        description: Implementation of a reverse ID for field Polyline{}.Animates []*Animate
      Polyline_AnimatesDBID_Index:
        description: implementation of the index of the withing the slice
      Rect_AnimationsDBID:
        description: Implementation of a reverse ID for field Rect{}.Animations []*Animate
      Rect_AnimationsDBID_Index:
        description: implementation of the index of the withing the slice
      RepeatCount_Data:
        description: Declation for basic field animateDB.RepeatCount {{BasicKind}} (to be completed)
      Text_AnimatesDBID:
        description: Implementation of a reverse ID for field Text{}.Animates []*Animate
      Text_AnimatesDBID_Index:
        description: implementation of the index of the withing the slice
      UpdatedAt:
        format: date-time
        type: string
      Values_Data:
        description: Declation for basic field animateDB.Values {{BasicKind}} (to be completed)
    schema:
      $ref: '#/definitions/NullInt64'
  animateDBsResponse:
    description: AnimateDBs arrays animateDBs
    schema:
      items:
        $ref: '#/definitions/animateDB'
      type: array
  circleDBResponse:
    description: CircleDBResponse provides response
    headers:
      CX_Data:
        description: Declation for basic field circleDB.CX {{BasicKind}} (to be completed)
      CY_Data:
        description: Declation for basic field circleDB.CY {{BasicKind}} (to be completed)
      Color_Data:
        description: Declation for basic field circleDB.Color {{BasicKind}} (to be completed)
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      FillOpacity_Data:
        description: Declation for basic field circleDB.FillOpacity {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field circleDB.Name {{BasicKind}} (to be completed)
      Radius_Data:
        description: Declation for basic field circleDB.Radius {{BasicKind}} (to be completed)
      SVG_CirclesDBID:
        description: |-
          insertion for pointer fields encoding declaration
          Implementation of a reverse ID for field SVG{}.Circles []*Circle
      SVG_CirclesDBID_Index:
        description: implementation of the index of the withing the slice
      Stroke_Data:
        description: Declation for basic field circleDB.Stroke {{BasicKind}} (to be completed)
      StrokeDashArray_Data:
        description: Declation for basic field circleDB.StrokeDashArray {{BasicKind}} (to be completed)
      StrokeWidth_Data:
        description: Declation for basic field circleDB.StrokeWidth {{BasicKind}} (to be completed)
      Transform_Data:
        description: Declation for basic field circleDB.Transform {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  circleDBsResponse:
    description: CircleDBs arrays circleDBs
    schema:
      items:
        $ref: '#/definitions/circleDB'
      type: array
  ellipseDBResponse:
    description: EllipseDBResponse provides response
    headers:
      CX_Data:
        description: Declation for basic field ellipseDB.CX {{BasicKind}} (to be completed)
      CY_Data:
        description: Declation for basic field ellipseDB.CY {{BasicKind}} (to be completed)
      Color_Data:
        description: Declation for basic field ellipseDB.Color {{BasicKind}} (to be completed)
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      FillOpacity_Data:
        description: Declation for basic field ellipseDB.FillOpacity {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field ellipseDB.Name {{BasicKind}} (to be completed)
      RX_Data:
        description: Declation for basic field ellipseDB.RX {{BasicKind}} (to be completed)
      RY_Data:
        description: Declation for basic field ellipseDB.RY {{BasicKind}} (to be completed)
      SVG_EllipsesDBID:
        description: |-
          insertion for pointer fields encoding declaration
          Implementation of a reverse ID for field SVG{}.Ellipses []*Ellipse
      SVG_EllipsesDBID_Index:
        description: implementation of the index of the withing the slice
      Stroke_Data:
        description: Declation for basic field ellipseDB.Stroke {{BasicKind}} (to be completed)
      StrokeDashArray_Data:
        description: Declation for basic field ellipseDB.StrokeDashArray {{BasicKind}} (to be completed)
      StrokeWidth_Data:
        description: Declation for basic field ellipseDB.StrokeWidth {{BasicKind}} (to be completed)
      Transform_Data:
        description: Declation for basic field ellipseDB.Transform {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  ellipseDBsResponse:
    description: EllipseDBs arrays ellipseDBs
    schema:
      items:
        $ref: '#/definitions/ellipseDB'
      type: array
  genericError:
    description: |-
      A GenericError is the default error message that is generated.
      For certain status codes there are more appropriate error structures.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        message:
          type: string
          x-go-name: Message
      type: object
  lineDBResponse:
    description: LineDBResponse provides response
    headers:
      Color_Data:
        description: Declation for basic field lineDB.Color {{BasicKind}} (to be completed)
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      FillOpacity_Data:
        description: Declation for basic field lineDB.FillOpacity {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field lineDB.Name {{BasicKind}} (to be completed)
      SVG_LinesDBID:
        description: |-
          insertion for pointer fields encoding declaration
          Implementation of a reverse ID for field SVG{}.Lines []*Line
      SVG_LinesDBID_Index:
        description: implementation of the index of the withing the slice
      Stroke_Data:
        description: Declation for basic field lineDB.Stroke {{BasicKind}} (to be completed)
      StrokeDashArray_Data:
        description: Declation for basic field lineDB.StrokeDashArray {{BasicKind}} (to be completed)
      StrokeWidth_Data:
        description: Declation for basic field lineDB.StrokeWidth {{BasicKind}} (to be completed)
      Transform_Data:
        description: Declation for basic field lineDB.Transform {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
      X1_Data:
        description: Declation for basic field lineDB.X1 {{BasicKind}} (to be completed)
      X2_Data:
        description: Declation for basic field lineDB.X2 {{BasicKind}} (to be completed)
      Y1_Data:
        description: Declation for basic field lineDB.Y1 {{BasicKind}} (to be completed)
      Y2_Data:
        description: Declation for basic field lineDB.Y2 {{BasicKind}} (to be completed)
    schema:
      $ref: '#/definitions/NullInt64'
  lineDBsResponse:
    description: LineDBs arrays lineDBs
    schema:
      items:
        $ref: '#/definitions/lineDB'
      type: array
  pathDBResponse:
    description: PathDBResponse provides response
    headers:
      Color_Data:
        description: Declation for basic field pathDB.Color {{BasicKind}} (to be completed)
      CreatedAt:
        format: date-time
        type: string
      Definition_Data:
        description: Declation for basic field pathDB.Definition {{BasicKind}} (to be completed)
      DeletedAt: {}
      FillOpacity_Data:
        description: Declation for basic field pathDB.FillOpacity {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field pathDB.Name {{BasicKind}} (to be completed)
      SVG_PathsDBID:
        description: |-
          insertion for pointer fields encoding declaration
          Implementation of a reverse ID for field SVG{}.Paths []*Path
      SVG_PathsDBID_Index:
        description: implementation of the index of the withing the slice
      Stroke_Data:
        description: Declation for basic field pathDB.Stroke {{BasicKind}} (to be completed)
      StrokeDashArray_Data:
        description: Declation for basic field pathDB.StrokeDashArray {{BasicKind}} (to be completed)
      StrokeWidth_Data:
        description: Declation for basic field pathDB.StrokeWidth {{BasicKind}} (to be completed)
      Transform_Data:
        description: Declation for basic field pathDB.Transform {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  pathDBsResponse:
    description: PathDBs arrays pathDBs
    schema:
      items:
        $ref: '#/definitions/pathDB'
      type: array
  polygoneDBResponse:
    description: PolygoneDBResponse provides response
    headers:
      Color_Data:
        description: Declation for basic field polygoneDB.Color {{BasicKind}} (to be completed)
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      FillOpacity_Data:
        description: Declation for basic field polygoneDB.FillOpacity {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field polygoneDB.Name {{BasicKind}} (to be completed)
      Points_Data:
        description: Declation for basic field polygoneDB.Points {{BasicKind}} (to be completed)
      SVG_PolygonesDBID:
        description: |-
          insertion for pointer fields encoding declaration
          Implementation of a reverse ID for field SVG{}.Polygones []*Polygone
      SVG_PolygonesDBID_Index:
        description: implementation of the index of the withing the slice
      Stroke_Data:
        description: Declation for basic field polygoneDB.Stroke {{BasicKind}} (to be completed)
      StrokeDashArray_Data:
        description: Declation for basic field polygoneDB.StrokeDashArray {{BasicKind}} (to be completed)
      StrokeWidth_Data:
        description: Declation for basic field polygoneDB.StrokeWidth {{BasicKind}} (to be completed)
      Transform_Data:
        description: Declation for basic field polygoneDB.Transform {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  polygoneDBsResponse:
    description: PolygoneDBs arrays polygoneDBs
    schema:
      items:
        $ref: '#/definitions/polygoneDB'
      type: array
  polylineDBResponse:
    description: PolylineDBResponse provides response
    headers:
      Color_Data:
        description: Declation for basic field polylineDB.Color {{BasicKind}} (to be completed)
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      FillOpacity_Data:
        description: Declation for basic field polylineDB.FillOpacity {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field polylineDB.Name {{BasicKind}} (to be completed)
      Points_Data:
        description: Declation for basic field polylineDB.Points {{BasicKind}} (to be completed)
      SVG_PolylinesDBID:
        description: |-
          insertion for pointer fields encoding declaration
          Implementation of a reverse ID for field SVG{}.Polylines []*Polyline
      SVG_PolylinesDBID_Index:
        description: implementation of the index of the withing the slice
      Stroke_Data:
        description: Declation for basic field polylineDB.Stroke {{BasicKind}} (to be completed)
      StrokeDashArray_Data:
        description: Declation for basic field polylineDB.StrokeDashArray {{BasicKind}} (to be completed)
      StrokeWidth_Data:
        description: Declation for basic field polylineDB.StrokeWidth {{BasicKind}} (to be completed)
      Transform_Data:
        description: Declation for basic field polylineDB.Transform {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  polylineDBsResponse:
    description: PolylineDBs arrays polylineDBs
    schema:
      items:
        $ref: '#/definitions/polylineDB'
      type: array
  rectDBResponse:
    description: RectDBResponse provides response
    headers:
      Color_Data:
        description: Declation for basic field rectDB.Color {{BasicKind}} (to be completed)
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      FillOpacity_Data:
        description: Declation for basic field rectDB.FillOpacity {{BasicKind}} (to be completed)
      Height_Data:
        description: Declation for basic field rectDB.Height {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field rectDB.Name {{BasicKind}} (to be completed)
      RX_Data:
        description: Declation for basic field rectDB.RX {{BasicKind}} (to be completed)
      SVG_RectsDBID:
        description: |-
          insertion for pointer fields encoding declaration
          Implementation of a reverse ID for field SVG{}.Rects []*Rect
      SVG_RectsDBID_Index:
        description: implementation of the index of the withing the slice
      Stroke_Data:
        description: Declation for basic field rectDB.Stroke {{BasicKind}} (to be completed)
      StrokeDashArray_Data:
        description: Declation for basic field rectDB.StrokeDashArray {{BasicKind}} (to be completed)
      StrokeWidth_Data:
        description: Declation for basic field rectDB.StrokeWidth {{BasicKind}} (to be completed)
      Transform_Data:
        description: Declation for basic field rectDB.Transform {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
      Width_Data:
        description: Declation for basic field rectDB.Width {{BasicKind}} (to be completed)
      X_Data:
        description: Declation for basic field rectDB.X {{BasicKind}} (to be completed)
      Y_Data:
        description: Declation for basic field rectDB.Y {{BasicKind}} (to be completed)
    schema:
      $ref: '#/definitions/NullInt64'
  rectDBsResponse:
    description: RectDBs arrays rectDBs
    schema:
      items:
        $ref: '#/definitions/rectDB'
      type: array
  svgDBResponse:
    description: SVGDBResponse provides response
    headers:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      Display_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field svgDB.Display bool (to be completed)
          provide the sql storage for the boolan
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: Declation for basic field svgDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullString'
  svgDBsResponse:
    description: SVGDBs arrays svgDBs
    schema:
      items:
        $ref: '#/definitions/svgDB'
      type: array
  textDBResponse:
    description: TextDBResponse provides response
    headers:
      Color_Data:
        description: Declation for basic field textDB.Color {{BasicKind}} (to be completed)
      Content_Data:
        description: Declation for basic field textDB.Content {{BasicKind}} (to be completed)
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      FillOpacity_Data:
        description: Declation for basic field textDB.FillOpacity {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field textDB.Name {{BasicKind}} (to be completed)
      SVG_TextsDBID:
        description: |-
          insertion for pointer fields encoding declaration
          Implementation of a reverse ID for field SVG{}.Texts []*Text
      SVG_TextsDBID_Index:
        description: implementation of the index of the withing the slice
      Stroke_Data:
        description: Declation for basic field textDB.Stroke {{BasicKind}} (to be completed)
      StrokeDashArray_Data:
        description: Declation for basic field textDB.StrokeDashArray {{BasicKind}} (to be completed)
      StrokeWidth_Data:
        description: Declation for basic field textDB.StrokeWidth {{BasicKind}} (to be completed)
      Transform_Data:
        description: Declation for basic field textDB.Transform {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
      X_Data:
        description: Declation for basic field textDB.X {{BasicKind}} (to be completed)
      Y_Data:
        description: Declation for basic field textDB.Y {{BasicKind}} (to be completed)
    schema:
      $ref: '#/definitions/NullInt64'
  textDBsResponse:
    description: TextDBs arrays textDBs
    schema:
      items:
        $ref: '#/definitions/textDB'
      type: array
  validationError:
    description: |-
      A ValidationError is an that is generated for validation failures.
      It has the same fields as a generic error but adds a Field property.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        field:
          type: string
          x-go-name: Field
        message:
          type: string
          x-go-name: Message
      type: object
schemes:
- http
securityDefinitions:
  basic:
    type: basic
swagger: "2.0"
